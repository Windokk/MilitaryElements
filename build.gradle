plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '1.0'
group = 'com.windokkstudio.militaryelements' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'militaryelements'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    
    mappings channel: 'official', version: '1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.enabledGameTestNamespaces', archivesBaseName
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                militaryelements {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', archivesBaseName

            mods {
                militaryelements {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')


            property 'forge.enabledGameTestNamespaces', archivesBaseName

            mods {
                militaryelements {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            
            args '--mod', 'militaryelements', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                militaryelements {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:1.0.2")
    fg.deobf("io.github.kosmx.bendy-lib:bendy-lib-forge:2.1.2")


    
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "Military Elements",
                "Specification-Vendor"    : "Windokk",
                "Specification-Version"   : "1.0.0", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Windokk",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {

        maven {
            url "file://${project.projectDir}/mcmodsrepo"

        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
